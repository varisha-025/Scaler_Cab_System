[{"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/index.js":"1","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/App.js":"2","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/BookingForm.js":"3","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/AllBookings.js":"4","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/EditBookingPage.js":"5","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/Home.js":"6","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/Booking.js":"7","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/Cab.js":"8"},{"size":468,"mtime":1699440633000,"results":"9","hashOfConfig":"10"},{"size":745,"mtime":1699440633000,"results":"11","hashOfConfig":"10"},{"size":9491,"mtime":1715627788646,"results":"12","hashOfConfig":"10"},{"size":2642,"mtime":1715627798411,"results":"13","hashOfConfig":"10"},{"size":8088,"mtime":1715627792578,"results":"14","hashOfConfig":"10"},{"size":821,"mtime":1699440633000,"results":"15","hashOfConfig":"10"},{"size":1058,"mtime":1699440633000,"results":"16","hashOfConfig":"10"},{"size":508,"mtime":1699440633000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16pn8jx",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/index.js",[],[],"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/App.js",[],[],"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/BookingForm.js",[],[],"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/AllBookings.js",[],[],"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/EditBookingPage.js",["43"],[],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport Cab from './Cab';\n\nfunction EditBookingPage() {\n    const { bookingId } = useParams();\n    const navigate = useNavigate();\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [availableCabs, setAvailableCabs] = useState([]);\n    const [email, setUserEmail] = useState('');\n    const [source, setSource] = useState('');\n    const [destination, setDestination] = useState('');\n    const [cabActive, setCabActive] = useState('');\n    const [estimatedPrice, setEstimatedPrice] = useState('');\n    const [shortestTime, setShortestTime] = useState('');\n\n    const handleCabSelection = (cab) => {\n\n        setCabActive(cab);\n        setEstimatedPrice(shortestTime * cab.price)\n    };\n\n    useEffect(() => {\n        if (cabActive !== '') {\n            setEstimatedPrice(shortestTime * cabActive.price);\n        }\n    }, [shortestTime]);\n\n\n    const calculateShortestTimeEndPoint = (source, destination) => {\n\n        axios.get(`${process.env.REACT_APP_API_URL}/path/calculateShortestTime`, {\n            params: {\n                source,\n                destination,\n            }\n        })\n            .then(response => {\n\n                if (response.data.hasOwnProperty('time')) {\n\n                    setShortestTime(response.data.time);\n                    setEstimatedPrice(shortestTime * cabActive.price);\n\n                }\n\n                if (response.data.hasOwnProperty('error')) {\n                    console.log('Error calculating shortest time', response);\n\n                }\n\n            })\n            .catch(error => {\n\n                console.log('Error calculating shortest time', error);\n            });\n    };\n\n    const fetchCabs = async () => {\n        try {\n            await axios.get(`${process.env.REACT_APP_API_URL}/cabs`, {\n                params: {\n                    startTime: new Date(),\n                }\n            })\n                .then((response) => {\n                    const filteredCabs = response.data;\n                    setAvailableCabs(filteredCabs);\n                })\n\n        } catch (error) {\n            console.log('Error fetching cabs:', error);\n        }\n    }\n\n    useEffect(() => {\n\n        axios.get(`${process.env.REACT_APP_API_URL}/bookings/${bookingId}`)\n            .then((response) => {\n                const data = response.data;\n                fetchCabs();\n\n                setCabActive(data.cab);\n                setUserEmail(data.email);\n                setSource(data.source);\n                setDestination(data.destination);\n                setEstimatedPrice(data.bookingPrice);\n                setShortestTime(data.estimatedTime);\n            })\n            .catch((error) => {\n                console.log('Error fetching booking', error);\n            });\n\n    }, [bookingId]);\n\n    const handleEditBooking = () => {\n\n        const updatedBooking = {\n            email,\n            source,\n            destination,\n            cab: cabActive,\n            bookingPrice: estimatedPrice,\n            estimatedTime: shortestTime,\n            startTime: new Date(),\n        };\n\n\n        axios.put(`${process.env.REACT_APP_API_URL}/bookings/${bookingId}`, updatedBooking, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((response) => {\n                console.log(response);\n                setSuccessMessage('Booking updated successfully');\n            })\n            .catch((error) => {\n                setErrorMessage('Error updating booking');\n                console.error('Error updating booking', error);\n            });\n\n        navigate('/allBookings');\n\n\n    };\n\n    const handleLocationChange = (location) => {\n        calculateShortestTimeEndPoint(location.source, location.destination);\n\n\n    }\n\n\n    return (\n        <div className=\"max-w-md mx-auto mt-12 p-6 bg-white rounded-md shadow-md\">\n            <h1 className=\"text-2xl font-semibold mb-4\">Edit Booking</h1>\n            <form>\n                <div className=\"mb-4\">\n                    <label className=\"block text-md mb-2 font-medium text-gray-600\" htmlFor=\"userEmail\">\n                        User Email:\n                    </label>\n                    <input\n                        type=\"email\"\n                        id=\"userEmail\"\n                        className=\"w-full p-2 border rounded-md\"\n                        value={email}\n                        onChange={(e) => setUserEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block text-md mb-2 font-medium text-gray-600\" htmlFor=\"source\">\n                        Source:\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"source\"\n                        className=\"w-full p-2 border rounded-md\"\n                        value={source}\n                        onChange={(e) => {\n                            setSource(e.target.value)\n                            e.target.value !== '' ? handleLocationChange({ source: e.target.value, destination: destination }) : setEstimatedPrice('')\n\n                        }}\n                    />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block text-md mb-2 font-medium text-gray-600\" htmlFor=\"destination\">\n                        Destination:\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"destination\"\n                        className=\"w-full p-2 border rounded-md\"\n                        value={destination}\n                        onChange={(e) => {\n                            setDestination(e.target.value)\n                            e.target.value !== '' ? handleLocationChange({ destination: e.target.value, source: source }) : setEstimatedPrice('')\n\n                        }}\n                    />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block text-md mb-2 font-medium text-gray-600\" htmlFor=\"cabName\">\n                        Booking Price:\n                    </label>\n                    <input\n                        type=\"text\"\n                        id=\"cabName\"\n                        disabled\n                        className=\"w-full p-2 border rounded-md\"\n                        value={estimatedPrice}\n                        onChange={(e) => setEstimatedPrice(e.target.value)}\n                    />\n                </div>\n\n                <div>\n                    <h2 className=\"text-2xl font-semibold mb-4\">Available Cabs</h2>\n                    <ul>\n                        {availableCabs.length === 0 && (\n                            <div>\n                                <p>No cabs available right now.</p>\n                                <p>Wait for a while.</p>\n                            </div>\n                        )}\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            {availableCabs?.map((cab) => (\n                                <Cab key={cab._id} name={cab.name} price={cab.price} isActive={cab._id === cabActive._id} onSelect={() => handleCabSelection(cab)} />\n                            ))}\n                        </div>\n                    </ul>\n\n                </div>\n\n                <button\n                    className=\"bg-blue-500 text-white rounded p-2 w-full font-semibold\"\n                    onClick={handleEditBooking}\n                >\n                    Update Booking\n                </button>\n            </form>\n            {successMessage && <div className=\"success-message\">{successMessage}</div>}\n            {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        </div>\n    );\n}\n\nexport default EditBookingPage;\n","/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/Home.js",[],[],"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/Booking.js",[],[],"/Users/varisharashid/Desktop/Scaler_Cab_System/server/client/src/components/Cab.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":30,"column":8,"nodeType":"46","endLine":30,"endColumn":22,"suggestions":"47"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cabActive'. Either include it or remove the dependency array.","ArrayExpression",["48"],{"desc":"49","fix":"50"},"Update the dependencies array to be: [cabActive, shortestTime]",{"range":"51","text":"52"},[1066,1080],"[cabActive, shortestTime]"]